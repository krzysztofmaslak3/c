!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@angular/common/http"),require("@angular/material/form-field"),require("@angular/material/select"),require("@angular/material/input"),require("@angular/material/button"),require("@angular/material/table"),require("@angular/platform-browser")):"function"==typeof define&&define.amd?define("s3search",["exports","@angular/core","@angular/forms","@angular/common/http","@angular/material/form-field","@angular/material/select","@angular/material/input","@angular/material/button","@angular/material/table","@angular/platform-browser"],t):t((e=e||self).s3search={},e.ng.core,e.ng.forms,e.ng.common.http,e.ng.material["form-field"],e.ng.material.select,e.ng.material.input,e.ng.material.button,e.ng.material.table,e.ng.platformBrowser)}(this,(function(e,t,r,a,n,o,l,i,u,s){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */function m(e,t,r,a){var n,o=arguments.length,l=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,r):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,r,a);else for(var i=e.length-1;i>=0;i--)(n=e[i])&&(l=(o<3?n(l):o>3?n(t,r,l):n(t,r))||l);return o>3&&l&&Object.defineProperty(t,r,l),l}var c=function(){function e(){}return e.ɵprov=t["ɵɵdefineInjectable"]({factory:function(){return new e},token:e,providedIn:"root"}),e=m([t.Injectable({providedIn:"root"})],e)}(),d=function(){function e(e,a){this.formBuilder=e,this.http=a,this.displayedColumns=["results"],this.dataSource=[],this.requestResultChange=new t.EventEmitter,this.requestResult="",this.startKey="",this.keyStartIndex=0,this.s3searchForm=this.formBuilder.group({queryText:["",r.Validators.required],region:["",r.Validators.required],pod:[""],date:[""],startKey:[this.startKey],keyStartIndex:[this.keyStartIndex]})}return e.prototype.ngOnInit=function(){},e.prototype.onSubmit=function(){var e=this,t=this;this.s3searchForm.valid&&this.http.post("/s3",this.s3searchForm.value).subscribe((function(e){console.log("Received response"),t.requestResult="Search completed",t.dataSource=e.lines,t.requestResultChange.emit(t.requestResult)}),(function(t){var r="";r=t.error instanceof ErrorEvent?"An error occurred:"+t.error.message:"Backend returned code "+t.status+", body was: "+t.error,console.error(r),e.requestResult=r,e.requestResultChange.emit(e.requestResult)}))},e.ctorParameters=function(){return[{type:r.FormBuilder},{type:a.HttpClient}]},m([t.Output()],e.prototype,"requestResultChange",void 0),e=m([t.Component({selector:"lib-s3search",template:'\n    <form [formGroup]="s3searchForm">\n    <div class="row">\n      <div class="column2">\n        <div class="example-container">\n          <br>\n          <mat-form-field appearance="fill">\n            <mat-label>Queried text</mat-label>\n            <input matInput formControlName="queryText">\n          </mat-form-field>\n          <br>\n          <mat-form-field appearance="fill">\n            <mat-label>Region</mat-label>\n            <mat-select formControlName="region">\n              <mat-option value="EMEA">EMEA</mat-option>\n              <mat-option value="APAC">APAC</mat-option>\n              <mat-option value="NAM">NAM</mat-option>\n            </mat-select>\n          </mat-form-field>\n          <br>\n          <mat-form-field appearance="fill">\n            <mat-label>POD</mat-label>\n            <input matInput formControlName="pod">\n          </mat-form-field>\n          <br>\n          <mat-form-field appearance="fill">\n            <mat-label>Date</mat-label>\n            <input matInput formControlName="date">\n          </mat-form-field>\n          <br>\n          <button mat-stroked-button color="primary"\n                  color="primary"\n                  (click)="onSubmit()">Search</button>\n        </div>\n      </div>\n      <div class="column7">\n        <br>\n        {{requestResult}}\n        <br>\n        <div *ngIf="dataSource.length > 0">\n          <table mat-table [dataSource]="dataSource" class="mat-elevation-z8">\n            <ng-container matColumnDef="results">\n              <th mat-header-cell *matHeaderCellDef>Search results</th>\n              <td mat-cell *matCellDef="let element"> {{element}} </td>\n            </ng-container>\n\n\n            <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n            <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>\n          </table>\n        </div>\n      </div>\n    </div>\n    </form>\n  ',styles:['.column2{float:left;width:20%}.column7{float:left;width:70%}.row:after{content:"";display:table;clear:both}table{width:100%}']})],e)}(),f=function(){function e(){}return e=m([t.NgModule({declarations:[d],imports:[n.MatFormFieldModule,r.FormsModule,r.ReactiveFormsModule,o.MatSelectModule,l.MatInputModule,i.MatButtonModule,a.HttpClientModule,u.MatTableModule,s.BrowserModule],exports:[d]})],e)}();e.S3searchComponent=d,e.S3searchModule=f,e.S3searchService=c,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=s3search.umd.min.js.map