{"version":3,"file":"reloadtool.js","sources":["ng://reloadtool/lib/reloadtool.service.ts","ng://reloadtool/lib/reloadtool.component.ts","ng://reloadtool/lib/reloadtool.module.ts","ng://reloadtool/public-api.ts","ng://reloadtool/reloadtool.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReloadtoolService {\n\n  constructor() { }\n}\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'lib-reloadtool',\n  styleUrls: ['./reloadtool.component.css'],\n  template: `\n    <form [formGroup]=\"reloadForm\">\n    <div class=\"row\">\n      <div class=\"column2\">\n        <div class=\"example-container\">\n          <br>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Entity</mat-label>\n            <mat-select formControlName=\"entity\">\n              <mat-option value=\"RISK\">Risks</mat-option>\n              <mat-option value=\"CURVE_DEFINITION\">Curve definitions</mat-option>\n              <mat-option value=\"TRADE\">Trades</mat-option>\n              <mat-option value=\"CURVE_INST_PRICE\">Matd tenor mappings</mat-option>\n              <mat-option value=\"JTD_WEIGHT\">JTD weights</mat-option>\n              <mat-option value=\"DURATION_WEIGHT\">Duration weights</mat-option>\n            </mat-select>\n          </mat-form-field>\n          <br>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Date</mat-label>\n            <input matInput formControlName=\"cobdate\">\n          </mat-form-field>\n          <br>\n          <button mat-stroked-button color=\"primary\"\n                  color=\"primary\"\n                  (click)=\"onSubmit()\">Reload</button>\n        </div>\n      </div>\n      <div class=\"column7\">\n        <br>\n        {{requestResult}}\n      </div>\n    </div>\n    </form>\n  `,\n  styles: []\n})\nexport class ReloadtoolComponent implements OnInit {\n  constructor(private formBuilder: FormBuilder, private http: HttpClient) { }\n\n  @Output() requestResultChange = new EventEmitter();\n  requestResult = '';\n\n  reloadForm = this.formBuilder.group({\n      entity: ['', Validators.required],\n      cobdate: ['', Validators.required]\n    });\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    let self = this;\n    if(this.reloadForm.valid){\n        this.http.post('/sod', this.reloadForm.value)\n        .subscribe((response: HttpResponse<string>)=>{\n          console.log('Received response');\n          self.requestResult = 'Reload initiated';\n          self.requestResultChange.emit(self.requestResult);\n        }, (error: HttpErrorResponse) => {\n           let error_message = ''\n           if (error.error instanceof ErrorEvent) {\n             // A client-side or network error occurred. Handle it accordingly.\n             error_message = 'An error occurred:'+error.error.message;\n           } else {\n             // The backend returned an unsuccessful response code.\n             // The response body may contain clues as to what went wrong,\n             error_message = 'Backend returned code '+error.status+', body was: '+error.error;\n           }\n           console.error(error_message);\n           this.requestResult = error_message;\n           this.requestResultChange.emit(this.requestResult);\n        })\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ReloadtoolComponent } from './reloadtool.component';\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [ReloadtoolComponent],\n  imports: [\n    MatFormFieldModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSelectModule,\n    MatInputModule,\n    MatButtonModule,\n    HttpClientModule\n  ],\n  exports: [ReloadtoolComponent]\n})\nexport class ReloadtoolModule { }\n","/*\n * Public API Surface of reloadtool\n */\n\nexport * from './lib/reloadtool.service';\nexport * from './lib/reloadtool.component';\nexport * from './lib/reloadtool.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;;;IAKa,iBAAiB,GAA9B,MAAa,iBAAiB;IAE5B;KAAiB;EAClB;;AAHY,iBAAiB;IAH7B,UAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,iBAAiB,CAG7B;;ICoCY,mBAAmB,GAAhC,MAAa,mBAAmB;IAC9B,YAAoB,WAAwB,EAAU,IAAgB;QAAlD,gBAAW,GAAX,WAAW,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAY;QAE5D,wBAAmB,GAAG,IAAI,YAAY,EAAE,CAAC;QACnD,kBAAa,GAAG,EAAE,CAAC;QAEnB,eAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAChC,MAAM,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YACjC,OAAO,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;SACnC,CAAC,CAAC;KARsE;IAU3E,QAAQ;KACP;IAED,QAAQ;QACN,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EAAC;YACrB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;iBAC5C,SAAS,CAAC,CAAC,QAA8B;gBACxC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;gBACjC,IAAI,CAAC,aAAa,GAAG,kBAAkB,CAAC;gBACxC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aACnD,EAAE,CAAC,KAAwB;gBACzB,IAAI,aAAa,GAAG,EAAE,CAAA;gBACtB,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;;oBAErC,aAAa,GAAG,oBAAoB,GAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;iBAC1D;qBAAM;;;oBAGL,aAAa,GAAG,wBAAwB,GAAC,KAAK,CAAC,MAAM,GAAC,cAAc,GAAC,KAAK,CAAC,KAAK,CAAC;iBAClF;gBACD,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;gBAC7B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;gBACnC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aACpD,CAAC,CAAA;SACL;KACF;CACF,CAAA;;YArCkC,WAAW;YAAgB,UAAU;;AAE5D;IAAT,MAAM,EAAE;gEAA0C;AAHxC,mBAAmB;IAxC/B,SAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAE1B,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkCT;;KAEF,CAAC;GACW,mBAAmB,CAsC/B;;IC5DY,gBAAgB,GAA7B,MAAa,gBAAgB;CAAI,CAAA;AAApB,gBAAgB;IAb5B,QAAQ,CAAC;QACR,YAAY,EAAE,CAAC,mBAAmB,CAAC;QACnC,OAAO,EAAE;YACP,kBAAkB;YAClB,WAAW;YACX,mBAAmB;YACnB,eAAe;YACf,cAAc;YACd,eAAe;YACf,gBAAgB;SACjB;QACD,OAAO,EAAE,CAAC,mBAAmB,CAAC;KAC/B,CAAC;GACW,gBAAgB,CAAI;;ACtBjC;;GAEG;;ACFH;;GAEG;;;;"}